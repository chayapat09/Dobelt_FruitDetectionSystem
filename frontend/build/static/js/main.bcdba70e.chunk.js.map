{"version":3,"sources":["Components/NavbarPage.module.scss","Components/NavbarPage.tsx","Components/RobotState.tsx","Components/Summary.tsx","Components/Logging.tsx","Reuse/EachModelTable.tsx","TSEntity/Model.ts","Axios/configAxios.tsx","Components/ModelManiputlation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","logo","styles","a","NavbarPage","className","Navbar","bg","expand","Brand","Nav","Link","href","RobotState","Summary","Logging","EachModelTable","props","model_name","fruit_name","addDate","addedBy","description","style","display","margin","Button","variant","marginTop","marginBottom","marginRight","marginLeft","Model","_id","this","axios","create","baseURL","x","Date","ModelManiputlation","useState","show","setShow","modelName","setModelName","typeOfFruit","setTypeOfFruit","setAddedBy","modelDescription","setModelDescription","dataTable","setDataTable","dummyVar","setDummyVar","handleClose","useEffect","get","then","res","console","log","data","catch","err","Container","fluid","Row","Col","onClick","float","Table","striped","bordered","hover","width","map","eachObj","Modal","size","onHide","backdrop","keyboard","aria-labelledby","Header","closeButton","Title","id","Body","Form","Group","controlId","Label","Control","type","onChange","e","target","value","as","rows","Footer","newModel","post","robotState","summary","logging","modelManiputlation","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcdba70e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavbarPage_logo__1p9Uk\",\"navbar\":\"NavbarPage_navbar__2I8xc\",\"a\":\"NavbarPage_a__2dWPR\"};","import React from 'react';\r\nimport ReactBootstrap, { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport styles from './NavbarPage.module.scss';\r\n\r\nconst logo: string = styles.logo;\r\nconst navbarLink: string = styles.a;\r\n\r\nfunction NavbarPage() {\r\n  return (\r\n    <div className={logo}>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>Dashboard</Navbar.Brand>\r\n        <Nav.Link href=\"/\">RobotState</Nav.Link>\r\n        <Nav.Link href=\"Summary\">Summary</Nav.Link>\r\n        <Nav.Link href=\"Logging\">Logging</Nav.Link>\r\n        <Nav.Link href=\"Gallery\">Gallery</Nav.Link>\r\n        <Nav.Link href=\"ModelManiputlation\">Model Manipulation</Nav.Link>\r\n        </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarPage;\r\n","import React from 'react';\r\n\r\nfunction RobotState() {\r\n  return (\r\n    <div>\r\n        <h1>This page is telling robot state</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RobotState;\r\n","import React from 'react';\r\n\r\nfunction Summary() {\r\n  return (\r\n    <div>\r\n        <h1>Summary of ALL prediction</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\n\r\nfunction Logging() {\r\n  return (\r\n    <div>\r\n        <h1>Logging!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logging;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { IModel, Model } from '../TSEntity/Model';\r\n//import {Model} from '../TSEntity/Model';\r\n// import { useHistory } from 'react-router-dom'; \r\n\r\n// type ModelProps = {\r\n//     _id: string,\r\n//     model_name: string,\r\n//     fruit_name: string,\r\n//     addDate: string,\r\n//     addedBy: string,\r\n//     description: string\r\n// }\r\n\r\nconst EachModelTable = (props: any) => {\r\n\r\n  // const reRender = () => {\r\n  //   props.dummyVar.setDu\r\n  // }\r\n\r\n  // const deleteModel = () => {\r\n\r\n  //   const deleteObj: Model = new Model('' ,'' ,'' ,null ,'' ,'');\r\n\r\n  //   axios.delete('model', deleteObj)\r\n  //   .then(res =>{\r\n  //     console.log(res.data);\r\n  //     // setDummyVar(dummyVar+1);\r\n  //   })\r\n  //   .catch(err =>{\r\n  //     console.log(err);\r\n  //   }); \r\n\r\n  // }\r\n\r\n  return (    \r\n        // <h6>Demo model</h6>\r\n        <tr>\r\n            <td>{props.model_name}</td>\r\n            <td>{props.fruit_name}</td>\r\n            <td>{props.addDate}</td>\r\n            <td>{props.addedBy}</td>\r\n            <td>{props.description}</td>\r\n            <td>\r\n              <div style={{\r\n                 display: 'block',\r\n                 margin: 'auto'\r\n              }}>\r\n                <Button variant=\"danger\" style={{\r\n                  marginTop: 2,\r\n                  marginBottom: 2,\r\n                  marginRight: 5, \r\n                }}>delete</Button>\r\n                <Button variant=\"warning\" style={{\r\n                  marginTop: 2,\r\n                  marginBottom: 2,\r\n                  marginLeft: 1\r\n                }}>select</Button>{' '}\r\n              </div>\r\n            </td>\r\n        </tr>\r\n    \r\n  );\r\n}\r\n\r\nexport default EachModelTable;\r\n","export interface IModel {\r\n    _id : string ;\r\n    model_name : string ;\r\n    fruit_name : string ;\r\n    addDate: Date | null;\r\n    addedBy: string;\r\n    description: string;\r\n}\r\n\r\nclass Model implements IModel {\r\n\r\n    public _id : string ;\r\n    public model_name : string ;\r\n    public fruit_name : string ;\r\n    public addDate : Date | null ;\r\n    public addedBy : string ;\r\n    public description : string ;\r\n\r\n    constructor(model_name : string ,\r\n                fruit_name : string ,\r\n                addedBy : string ,\r\n                addDate : Date | null ,\r\n                description : string ,\r\n                 _id? : string  ) {\r\n\r\n        this._id = _id || '';\r\n        this.model_name  = model_name;\r\n        this.fruit_name  = fruit_name;\r\n        this.addDate    = addDate;\r\n        this.addedBy     = addedBy;\r\n        this.description = description;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { Model };\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://161.200.199.2:5002/api/'\r\n})","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Container, Form, Modal, Row, Table } from 'react-bootstrap';\r\nimport EachModelTable from '../Reuse/EachModelTable';\r\nimport { IModel, Model } from '../TSEntity/Model';\r\n//import styles from './ModelManipuation.module.scss';\r\nimport axios from '../Axios/configAxios';\r\n// import axios from 'axios';\r\n// import { useHistory } from 'react-router-dom';  \r\n\r\n\r\n// let dataTable: Model[] = [];\r\n\r\n//Validation Table\r\nconst x = new Date()\r\nconst ObjA: Model = new Model('Apple1', 'apple','Alice' ,x , 'Our first model', '1');\r\nconst ObjB: Model = new Model('Orange1', 'orange','Bob' ,x , 'Our second model', '2');\r\n// dataTable.push(ObjA);\r\n// dataTable.push(ObjB);\r\n\r\n\r\n\r\n\r\nfunction ModelManiputlation() {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [modelName, setModelName] = useState(\"\");\r\n  const [typeOfFruit, setTypeOfFruit] = useState(\"\");\r\n  const [addedBy, setAddedBy] = useState(\"\");\r\n  const [modelDescription, setModelDescription] = useState(\"\");\r\n  const [dataTable, setDataTable] = useState<Model[]>([]);\r\n  const [dummyVar, setDummyVar] = useState(0);\r\n  \r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const postNewModel = () =>{\r\n    console.log(modelName, typeOfFruit, addedBy, modelDescription);\r\n    const newModel: Model = new Model(modelName ,typeOfFruit ,addedBy ,null ,modelDescription , '');\r\n\r\n    axios.post('model', newModel)\r\n    .then(res =>{\r\n        console.log(res.data);\r\n        handleClose();\r\n        setDummyVar(dummyVar+1);\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    });\r\n\r\n    // history.push(\"/Summary\");\r\n    // history.push(\"/ModelManiputlation\");\r\n\r\n  }\r\n\r\n  const getModel = () =>{\r\n    axios.get('model').\r\n    then(res =>{\r\n      console.log(res.data);\r\n      setDataTable(res.data);\r\n    }).\r\n    catch(err =>{\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  useEffect(() =>{\r\n    getModel();\r\n  }, [dummyVar]);\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n          <Col>\r\n            <h1>Model Manipulation!</h1>\r\n          </Col>\r\n          <Col>\r\n            {/* <h6>{ObjA.description}</h6> */}\r\n            <Button variant=\"outline-success\" onClick={handleShow} \r\n            style={{\r\n              float: 'right',\r\n              marginTop: 20,\r\n              marginBottom: 20,\r\n              marginRight: 10\r\n            }}>Add new model</Button>{' '}\r\n          </Col>\r\n      </Row>\r\n\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: \"12.5%\"}}>Model name</th>\r\n            <th style={{width: \"12.5%\"}}>Type of fruit</th>\r\n            <th style={{width: \"12.5%\"}}>Added by</th>\r\n            <th style={{width: \"12.5%\"}}>DateTime</th>\r\n            <th style={{width: \"40%\"}}>Description</th>\r\n            <th style={{width: \"10%\"}}>Action</th>\r\n          </tr>\r\n        </thead>  \r\n        <tbody>\r\n          {/* <EachModelTable _id = {ObjA._id}\r\n                          model_name={ObjA.model_name}\r\n                          fruit_name={ObjA.fruit_name}\r\n                          addDate={ObjA.addDate === null ? \"\" : ObjA.addDate}\r\n                          addedBy={ObjA.addedBy}\r\n                          description={ObjA.description}/> */}\r\n\r\n          {dataTable.map((eachObj) => {\r\n            const {model_name, fruit_name, addDate, addedBy, description} = eachObj;\r\n            return (<EachModelTable \r\n                    _id = {eachObj._id}\r\n                    model_name={eachObj.model_name}\r\n                    fruit_name={eachObj.fruit_name}\r\n                    addDate={eachObj.addDate === null ? \"\" : eachObj.addDate}\r\n                    addedBy={eachObj.addedBy}\r\n                    description={eachObj.description}\r\n                    // dummyVar={[dummyVar, setDummyVar]}\r\n                    />\r\n            );}\r\n          )}\r\n\r\n        </tbody>\r\n      </Table>\r\n      {/* EachModelTable  */}\r\n\r\n      {/* Modal tag */}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          New model\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* <div>\r\n          <h5>unknown model</h5>\r\n        </div> */}\r\n\r\n        {/* Form Control */}\r\n        <Form>\r\n\r\n          <Form.Group controlId=\"formModelName\">\r\n            <Form.Label>model name</Form.Label>\r\n            <Form.Control type=\"text\" onChange={(e)=>setModelName(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formTypeOfFruit\">\r\n            <Form.Label>Type of fruit</Form.Label>\r\n            <Form.Control type=\"text\" onChange={(e)=>setTypeOfFruit(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formAddedBy\">\r\n            <Form.Label>Added by</Form.Label>\r\n            <Form.Control type=\"text\" onChange={(e)=>setAddedBy(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"exampleForm.ControlModelDescription\">\r\n            <Form.Label>Model Description</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} onChange={(e)=>setModelDescription(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n        </Form>\r\n\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={postNewModel}>Submit</Button>\r\n      </Modal.Footer>\r\n      </Modal>\r\n\r\n    </Container>    \r\n  );\r\n}\r\n\r\nexport default ModelManiputlation;\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavbarPage from './Components/NavbarPage';\nimport RobotState from './Components/RobotState';\nimport Summary from './Components/Summary';\nimport Logging from './Components/Logging';\nimport ModelManiputlation from './Components/ModelManiputlation';\n\nconst robotState = () => <RobotState />\nconst summary = () => <Summary />\nconst logging = () => <Logging />\nconst modelManiputlation = () => <ModelManiputlation />\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavbarPage />\n        <Switch>\n          <Route exact path='/' component={robotState}/>\n          <Route path = '/Summary' component={summary}/>\n          <Route path = '/Logging' component={logging}/>\n          <Route path = '/Gallery'/>\n          <Route path = '/ModelManiputlation' component={modelManiputlation}/>\n          <Route path = '*'/>\n        </Switch>  \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}